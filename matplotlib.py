# -*- coding: utf-8 -*-
"""Matplotlib.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RqoS7Hy_69jqAK0euy6Vvi020PZK2edb
"""

from matplotlib import pyplot as plt

# plotting our canvas
plt.plot([1,2,3],[4,5,1])
plt.show

plt.plot([1,2,3],[4,5,1])
plt.show

# add title and labels to our graph
x=[5,8,10]
y=[12,16,6]
plt.plot(x,y)
plt.title('info')
plt.ylabel('y axis')
plt.xlabel('x axis')
plt.show()

from matplotlib import style

style.use("ggplot")
x=[5,8,10]
y=[12,16,6]

x2=[6,9,11]
y2=[6,15,7]
plt.plot(x,y,'g',label='line one',linewidth=5)
plt.plot(x2,y2,'c',label='line two',linewidth=5)

plt.title('info')
plt.ylabel('y axis')
plt.xlabel('x axis')

plt.legend()
plt.grid(True,color='k')
plt.show()

plt.bar([1,3,5,7,9],[5,2,7,8,2],label='example one')
plt.bar([2,4,6,8,10],[8,6,2,5,6],label='example two',color='g')

plt.legend()
plt.ylabel('bar number')
plt.xlabel('bar height')
plt.title("bar graph")

plt.show()

population_ages=[22,44,56,23,77,9,63,63,53,13,43,90,42,61,83,88]
bins=[0,10,20,30,40,50,60,70,80,90,100,110,120,130]
plt.hist(population_ages,bins,histtype='bar',rwidth=0.8)
plt.xlabel('x')
plt.ylabel('y')
plt.title('histogram')
plt.legend()
plt.show()

from matplotlib import pyplot as plt

# availables styles
plt.style.available

plt.style.use("ggplot")

# Medium Developer salaries by age
ages_x=[25,26,27,28,29,30,31,32,33,34,35]

dev_y=[38496,42000,46752,49320,53200,
       56000,62316,64928,67317,68748,73752]

# Medium Python Developer Salaries by age
py_dev_y=[45372,48876,53850,57287,633016,
          65998,70003,70000,71496,75370,83640]

# median javascript developer salaries by age
js_dev_y=[37810,43515,46823,49293,53437,
          56373,62375,66674,68745,68746,74583]

plt.plot(ages_x, dev_y, label='All Devs')
plt.plot(ages_x, py_dev_y, label='python')
plt.xlabel("ages")
plt.ylabel("medium salary (usd)")
plt.title("medium salary )usd) by age")

# adding legend
# method 1
# plt.legend(['all devs", "python"])
# method 2 - pass a label argument to plot

plt.legend()

# Bar chart

import numpy as np
plt.style.use("ggplot")
plt.rc("figure",figsize=(10,6))

# medium developer salaries by age 
ages_x=[25,26,27,28,29,30,31,32,33,34,35]
dev_y=[38496,42000,46752,49320,53200,
       56000,62316,64928,67317,68748,73752]

# medium python developer salries by age
py_dev_y=[45372,48876,53850,57287,63016,
          65998,70003,70000,71496,75370,83640]

# medium javascript developer salaries by age
js_dev_y=[37810,43515,46823,49293,53437,
          56373,62375,66674,68745,68746,74583]

plt.bar(ages_x,dev_y,color='#444444',label='all devs')

# stacked 
plt.bar(ages_x,dev_y,color='#444444',label='all devs')
plt.bar(ages_x,py_dev_y,color='#008df5',label='python')
plt.bar(ages_x,js_dev_y,color='#e5ae38',label='javascript')

plt.xlabel("Ages")
plt.ylabel('medium salary(usd')
plt.title("medium salary (usd) by age")

plt.legend()

# automatically adjust subplot parameters to give specified padding.
plt.tight_layout()
plt.show()

# side by side

x_indexes=np.arange(len(ages_x))
bar_width=0.25

plt.bar(x_indexes - bar_width,dev_y, width=bar_width,color='#444444', label='all devs')

plt.bar(x_indexes,py_dev_y,width=bar_width,color='#008df5',label='python')

plt.bar(x_indexes+bar_width,js_dev_y,width=bar_width,color='#e5ae38',label="lavascript")

#without this line our age range is lost, to fix this:
# plt.xticks(ticks=x_indexes,label=ages_x)

plt.xlabel('ages')
plt.ylabel('medium salary(usd)')
plt.title("medium salary (usd) by age")

# plt.legend("ages")
# plt.ylabel("medium salary (usd)")
# plt.title("medium salary (usd) by age")

plt.legend()
plt.tight_layout()
plt.show()

# pie chart
plt.style.use("seaborn-white")
plt.rc("figure",figsize=(8,6))

# slics=[60,40]
# color:
# blue=#008fd5
# red=#fc4f39
# yellow=#e5ae37
# green=#6d904f

slics=[128,80,30,20]
labels=['sixty','forty','extral','extral']
colors=['#000fd5','#fc4f30','#e5ae37','#6d904f']

plt.pie(slics,labels=labels,colors=colors,
        wedgeprops={"edgecolor":'black'})

plt.title('my awesome pie chart')
plt.tight_layout()
plt.show()

# stack plot
plt.style.use("fivethirtyeight")
plt.rc("figure",figsize=(12,10))

minutes=[1,2,3,4,5,6,7,8,9]
player1=[1,2,3,3,4,4,4,4,5]
player2=[1,1,1,1,2,2,2,3,4]
player3=[1,1,1,2,2,2,3,3,3]

#colors:
#blue=#008fds
# red=#fc4f30
# yellow=#e5ae37
# green=#6d904f

# plt.pie([1,1,1],labels=["player1","player2","player3"])
labels=["player1","player2","player3"]
colors=['#008fd5','#fc4f30','#6d904f']

plt.stackplot(minutes,player1,player2,player3,labels=labels,colors=colors)
plt.legend(loc='upper left')

plt.title("my awesome stack plot")
plt.tight_layout()
plt.show()

# HISTOGRAMS
plt.rc('figure',figsize=(10,8))
plt.style.use("ggplot")

ages=[18,18,21,25,26,30,32,38,45,55 ]
bins=[10,20,30,40,50,60]

#plt.hist(ages,bins=5,edgecolor='black')
#plt.hist(ages,bins=bins,edgecolor="black")

#excluding data for age 10
plt.hist(ages,bins[1:],edgecolor="black")

plt.title('age of repondants')
plt.xlabel("ages")
plt.ylabel("total respondants")
plt.tight_layout()
plt.show()

# SCATTER PLOT
plt.style.use("seaborn")
plt.rc("figure",figsize=(10,8))

x=[5,7,8,5,6,7,9,2,3,4,4,4,2,6,3,6,8,6,4,1]
y=[7,4,3,9,1,3,2,5,2,4,8,7,1,6,4,9,7,7,5,1]

# s-size of dots
# c-color
# edgecolor-edges to the circles

# plt.scatter(x,y,s=100,c='green',marker='x')
#plt.scatter(x,y,s=100,c='red',edgecolor="black",
#            linewidth=1,alpha=0.75)

# color and size on a per mark basis
colors=[7,5,9,7,5,7,2,5,3,7,1,2,8,1,9,2,5,6,7,5]
sizes=[209,486,381,255,191,315,185,228,174,
       538,239,394,399,153,273,293,436,501,397,539]

plt.scatter(x,y,s=sizes,c=colors,cmap='Greens',edgecolor='black',
            linewidth=1,alpha=0.75)
cbar=plt.colorbar()
cbar.set_label('satisfaction level')

plt.tight_layout()
plt.show()